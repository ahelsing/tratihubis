# Config for tratihubis as modified for GENI-NSF (Trac 0.11, etc)

# This config is tuned for copying over GENI NSF tickets to GitHub
# This config would need to be edited with the right token for the user doing the import,
# plus the right paths to tickets, comments, and attachment files
# plus update the name of the repo.

[tratihubis]
# In GitHub settings create a token for the user running this script.
# Note that this user will end up appearing as the author/reporter/commenter/owner of everything not otherwise assigned.
# The other users are only used in comments.
# The only other place real github users get used is in the assignee.
token = <FIXME-GitHub-Token-of-importer>
# If the name of the repo has a forward slash, the first part is the name of an organization.
#repo = Organization/repository
repo = Repository

# The CSV format output of `query_tickets.sql`
tickets = Path-to-query_tickets-output.csv
# The CSV format output of `query_comments.sql`
comments = Path-to-query_comments-output.csv

# With latest tratihubis, right side must be a token for the user, not their username.
# This is used so comments and issues are created by the right person if possible.
# Also note that the user's login for this token needs to match the username found under userLogins for that person to actually get listed as owning the ticket (assignee).

# So ideally this will look like:
 users = user2githubloging:user2githubtoken, user3githublogin:user3githubtoken, user4githublogin:user4githutoken, *:*

# AMH added: These logins are used when assigning tickets or putting in a comment about who made a comment or attachment.
# Be sure to include an entry for the user that is doing the import.

# People no longer working on the project or without a github login are assigned to to the github login of the importer.
userLogins = user2traclogin:user2githublogin, user3traclogin:user3githublogin, user4traclogin:user4githublogin, importertraclogin: importergithublogin, *: importergithublogin

# Repository must be pre-populated with labels for ticket type, resolution, priority, and keywords.
labels = resolution=invalid: invalid, resolution=wontfix: wontfix, resolution=duplicate: duplicate, resolution=worksforme: worksforme, priority=blocker: blocker, priority=critical: critical, type=enhancement: enhancement, type=task: task, keyword=windows: windows, keyword=mac: mac, keyword=acceptance: acceptance, keyword=Mac: mac

# Should wiki format be converted to Markdown format text
convert_text = true

# The URL of the Trac repo you are importing from.
trac_url = http://trac.myorg.com/tracreponame

# Should the importer create labels for components
addComponentLabels = true

# Attachments are URLs to files. So the Prefix should show where all the attachments have been uploaded.
# This file should be the CSV export from `query_attachments.sql`
attachments = path-to-output-from-query_attachments.csv
# Right thing might be to move attachments to a gist or github
#attachmentsPrefix = https://raw.github.com/githublogin/githubrepo/master/attachments
# But for now, reference them at their original trac location:
attachmentsPrefix = http://trac.myorg.com/tracrepo/attachment/ticket

# For testing or to skip certain tickets, specify specific ticket numbers to import.
#ticketsToRender = 33,34,95,290,427

# To start import at a specific ticket# (say to pick up where you got interrupted or add new tickets)
ticketToStartAt=226
